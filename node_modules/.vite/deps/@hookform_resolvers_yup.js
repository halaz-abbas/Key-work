import "./react-DOh4kPxq.js";
import { appendErrors } from "./index.esm-Bkfax7D7.js";
import { o as o$1, s } from "./resolvers-CDsMBNWa.js";

//#region node_modules/@hookform/resolvers/yup/dist/yup.mjs
function o(o$2, n, s$1) {
	return void 0 === s$1 && (s$1 = {}), function(a, i, c) {
		try {
			return Promise.resolve(function(t, r) {
				try {
					var u = (null != n && n.context && console.warn("You should not used the yup options context. Please, use the 'useForm' context object instead"), Promise.resolve(o$2["sync" === s$1.mode ? "validateSync" : "validate"](a, Object.assign({ abortEarly: !1 }, n, { context: i }))).then(function(t$1) {
						return c.shouldUseNativeValidation && o$1({}, c), {
							values: s$1.raw ? Object.assign({}, a) : t$1,
							errors: {}
						};
					}));
				} catch (e) {
					return r(e);
				}
				return u && u.then ? u.then(void 0, r) : u;
			}(0, function(e) {
				if (!e.inner) throw e;
				return {
					values: {},
					errors: s((o$3 = e, n$1 = !c.shouldUseNativeValidation && "all" === c.criteriaMode, (o$3.inner || []).reduce(function(e$1, t) {
						if (e$1[t.path] || (e$1[t.path] = {
							message: t.message,
							type: t.type
						}), n$1) {
							var o$4 = e$1[t.path].types, s$2 = o$4 && o$4[t.type];
							e$1[t.path] = appendErrors(t.path, n$1, e$1, t.type, s$2 ? [].concat(s$2, t.message) : t.message);
						}
						return e$1;
					}, {})), c)
				};
				var o$3, n$1;
			}));
		} catch (e) {
			return Promise.reject(e);
		}
	};
}

//#endregion
export { o as yupResolver };
//# sourceMappingURL=@hookform_resolvers_yup.js.map